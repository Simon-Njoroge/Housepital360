/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OurServicesRouteImport } from './routes/our-services'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactUsRouteImport } from './routes/contact-us'
import { Route as AuthResetPasswordRouteImport } from './routes/auth-reset-password'
import { Route as AboutUsRouteImport } from './routes/about-us'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardUserSettingRouteImport } from './routes/dashboard/user-setting'
import { Route as DashboardUserPrescriptionsRouteImport } from './routes/dashboard/user-prescriptions'
import { Route as DashboardUserPharmacyRouteImport } from './routes/dashboard/user-pharmacy'
import { Route as DashboardUserMessageRouteImport } from './routes/dashboard/user-message'
import { Route as DashboardUserLabtestRouteImport } from './routes/dashboard/user-labtest'
import { Route as DashboardUserHomeRouteImport } from './routes/dashboard/user-home'
import { Route as DashboardUserCalendarRouteImport } from './routes/dashboard/user-calendar'
import { Route as DashboardUserBillingRouteImport } from './routes/dashboard/user-billing'
import { Route as DashboardUserAppointmentRouteImport } from './routes/dashboard/user-appointment'
import { Route as DashboardDocPrescriptionRouteImport } from './routes/dashboard/doc-prescription'
import { Route as DashboardDocMessageRouteImport } from './routes/dashboard/doc-message'
import { Route as DashboardDocHomeRouteImport } from './routes/dashboard/doc-home'
import { Route as DashboardDocCalendarRouteImport } from './routes/dashboard/doc-calendar'
import { Route as DashboardDocAppointmentRouteImport } from './routes/dashboard/doc-appointment'

const OurServicesRoute = OurServicesRouteImport.update({
  id: '/our-services',
  path: '/our-services',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactUsRoute = ContactUsRouteImport.update({
  id: '/contact-us',
  path: '/contact-us',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth-reset-password',
  path: '/auth-reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutUsRoute = AboutUsRouteImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserSettingRoute = DashboardUserSettingRouteImport.update({
  id: '/user-setting',
  path: '/user-setting',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserPrescriptionsRoute =
  DashboardUserPrescriptionsRouteImport.update({
    id: '/user-prescriptions',
    path: '/user-prescriptions',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardUserPharmacyRoute = DashboardUserPharmacyRouteImport.update({
  id: '/user-pharmacy',
  path: '/user-pharmacy',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserMessageRoute = DashboardUserMessageRouteImport.update({
  id: '/user-message',
  path: '/user-message',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserLabtestRoute = DashboardUserLabtestRouteImport.update({
  id: '/user-labtest',
  path: '/user-labtest',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserHomeRoute = DashboardUserHomeRouteImport.update({
  id: '/user-home',
  path: '/user-home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserCalendarRoute = DashboardUserCalendarRouteImport.update({
  id: '/user-calendar',
  path: '/user-calendar',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserBillingRoute = DashboardUserBillingRouteImport.update({
  id: '/user-billing',
  path: '/user-billing',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUserAppointmentRoute =
  DashboardUserAppointmentRouteImport.update({
    id: '/user-appointment',
    path: '/user-appointment',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardDocPrescriptionRoute =
  DashboardDocPrescriptionRouteImport.update({
    id: '/doc-prescription',
    path: '/doc-prescription',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardDocMessageRoute = DashboardDocMessageRouteImport.update({
  id: '/doc-message',
  path: '/doc-message',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDocHomeRoute = DashboardDocHomeRouteImport.update({
  id: '/doc-home',
  path: '/doc-home',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDocCalendarRoute = DashboardDocCalendarRouteImport.update({
  id: '/doc-calendar',
  path: '/doc-calendar',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDocAppointmentRoute = DashboardDocAppointmentRouteImport.update({
  id: '/doc-appointment',
  path: '/doc-appointment',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsRoute
  '/auth-reset-password': typeof AuthResetPasswordRoute
  '/contact-us': typeof ContactUsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/our-services': typeof OurServicesRoute
  '/dashboard/doc-appointment': typeof DashboardDocAppointmentRoute
  '/dashboard/doc-calendar': typeof DashboardDocCalendarRoute
  '/dashboard/doc-home': typeof DashboardDocHomeRoute
  '/dashboard/doc-message': typeof DashboardDocMessageRoute
  '/dashboard/doc-prescription': typeof DashboardDocPrescriptionRoute
  '/dashboard/user-appointment': typeof DashboardUserAppointmentRoute
  '/dashboard/user-billing': typeof DashboardUserBillingRoute
  '/dashboard/user-calendar': typeof DashboardUserCalendarRoute
  '/dashboard/user-home': typeof DashboardUserHomeRoute
  '/dashboard/user-labtest': typeof DashboardUserLabtestRoute
  '/dashboard/user-message': typeof DashboardUserMessageRoute
  '/dashboard/user-pharmacy': typeof DashboardUserPharmacyRoute
  '/dashboard/user-prescriptions': typeof DashboardUserPrescriptionsRoute
  '/dashboard/user-setting': typeof DashboardUserSettingRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsRoute
  '/auth-reset-password': typeof AuthResetPasswordRoute
  '/contact-us': typeof ContactUsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/our-services': typeof OurServicesRoute
  '/dashboard/doc-appointment': typeof DashboardDocAppointmentRoute
  '/dashboard/doc-calendar': typeof DashboardDocCalendarRoute
  '/dashboard/doc-home': typeof DashboardDocHomeRoute
  '/dashboard/doc-message': typeof DashboardDocMessageRoute
  '/dashboard/doc-prescription': typeof DashboardDocPrescriptionRoute
  '/dashboard/user-appointment': typeof DashboardUserAppointmentRoute
  '/dashboard/user-billing': typeof DashboardUserBillingRoute
  '/dashboard/user-calendar': typeof DashboardUserCalendarRoute
  '/dashboard/user-home': typeof DashboardUserHomeRoute
  '/dashboard/user-labtest': typeof DashboardUserLabtestRoute
  '/dashboard/user-message': typeof DashboardUserMessageRoute
  '/dashboard/user-pharmacy': typeof DashboardUserPharmacyRoute
  '/dashboard/user-prescriptions': typeof DashboardUserPrescriptionsRoute
  '/dashboard/user-setting': typeof DashboardUserSettingRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about-us': typeof AboutUsRoute
  '/auth-reset-password': typeof AuthResetPasswordRoute
  '/contact-us': typeof ContactUsRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/our-services': typeof OurServicesRoute
  '/dashboard/doc-appointment': typeof DashboardDocAppointmentRoute
  '/dashboard/doc-calendar': typeof DashboardDocCalendarRoute
  '/dashboard/doc-home': typeof DashboardDocHomeRoute
  '/dashboard/doc-message': typeof DashboardDocMessageRoute
  '/dashboard/doc-prescription': typeof DashboardDocPrescriptionRoute
  '/dashboard/user-appointment': typeof DashboardUserAppointmentRoute
  '/dashboard/user-billing': typeof DashboardUserBillingRoute
  '/dashboard/user-calendar': typeof DashboardUserCalendarRoute
  '/dashboard/user-home': typeof DashboardUserHomeRoute
  '/dashboard/user-labtest': typeof DashboardUserLabtestRoute
  '/dashboard/user-message': typeof DashboardUserMessageRoute
  '/dashboard/user-pharmacy': typeof DashboardUserPharmacyRoute
  '/dashboard/user-prescriptions': typeof DashboardUserPrescriptionsRoute
  '/dashboard/user-setting': typeof DashboardUserSettingRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about-us'
    | '/auth-reset-password'
    | '/contact-us'
    | '/dashboard'
    | '/our-services'
    | '/dashboard/doc-appointment'
    | '/dashboard/doc-calendar'
    | '/dashboard/doc-home'
    | '/dashboard/doc-message'
    | '/dashboard/doc-prescription'
    | '/dashboard/user-appointment'
    | '/dashboard/user-billing'
    | '/dashboard/user-calendar'
    | '/dashboard/user-home'
    | '/dashboard/user-labtest'
    | '/dashboard/user-message'
    | '/dashboard/user-pharmacy'
    | '/dashboard/user-prescriptions'
    | '/dashboard/user-setting'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about-us'
    | '/auth-reset-password'
    | '/contact-us'
    | '/dashboard'
    | '/our-services'
    | '/dashboard/doc-appointment'
    | '/dashboard/doc-calendar'
    | '/dashboard/doc-home'
    | '/dashboard/doc-message'
    | '/dashboard/doc-prescription'
    | '/dashboard/user-appointment'
    | '/dashboard/user-billing'
    | '/dashboard/user-calendar'
    | '/dashboard/user-home'
    | '/dashboard/user-labtest'
    | '/dashboard/user-message'
    | '/dashboard/user-pharmacy'
    | '/dashboard/user-prescriptions'
    | '/dashboard/user-setting'
  id:
    | '__root__'
    | '/'
    | '/about-us'
    | '/auth-reset-password'
    | '/contact-us'
    | '/dashboard'
    | '/our-services'
    | '/dashboard/doc-appointment'
    | '/dashboard/doc-calendar'
    | '/dashboard/doc-home'
    | '/dashboard/doc-message'
    | '/dashboard/doc-prescription'
    | '/dashboard/user-appointment'
    | '/dashboard/user-billing'
    | '/dashboard/user-calendar'
    | '/dashboard/user-home'
    | '/dashboard/user-labtest'
    | '/dashboard/user-message'
    | '/dashboard/user-pharmacy'
    | '/dashboard/user-prescriptions'
    | '/dashboard/user-setting'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutUsRoute: typeof AboutUsRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  ContactUsRoute: typeof ContactUsRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  OurServicesRoute: typeof OurServicesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/our-services': {
      id: '/our-services'
      path: '/our-services'
      fullPath: '/our-services'
      preLoaderRoute: typeof OurServicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact-us': {
      id: '/contact-us'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof ContactUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth-reset-password': {
      id: '/auth-reset-password'
      path: '/auth-reset-password'
      fullPath: '/auth-reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about-us': {
      id: '/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof AboutUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user-setting': {
      id: '/dashboard/user-setting'
      path: '/user-setting'
      fullPath: '/dashboard/user-setting'
      preLoaderRoute: typeof DashboardUserSettingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-prescriptions': {
      id: '/dashboard/user-prescriptions'
      path: '/user-prescriptions'
      fullPath: '/dashboard/user-prescriptions'
      preLoaderRoute: typeof DashboardUserPrescriptionsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-pharmacy': {
      id: '/dashboard/user-pharmacy'
      path: '/user-pharmacy'
      fullPath: '/dashboard/user-pharmacy'
      preLoaderRoute: typeof DashboardUserPharmacyRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-message': {
      id: '/dashboard/user-message'
      path: '/user-message'
      fullPath: '/dashboard/user-message'
      preLoaderRoute: typeof DashboardUserMessageRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-labtest': {
      id: '/dashboard/user-labtest'
      path: '/user-labtest'
      fullPath: '/dashboard/user-labtest'
      preLoaderRoute: typeof DashboardUserLabtestRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-home': {
      id: '/dashboard/user-home'
      path: '/user-home'
      fullPath: '/dashboard/user-home'
      preLoaderRoute: typeof DashboardUserHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-calendar': {
      id: '/dashboard/user-calendar'
      path: '/user-calendar'
      fullPath: '/dashboard/user-calendar'
      preLoaderRoute: typeof DashboardUserCalendarRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-billing': {
      id: '/dashboard/user-billing'
      path: '/user-billing'
      fullPath: '/dashboard/user-billing'
      preLoaderRoute: typeof DashboardUserBillingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/user-appointment': {
      id: '/dashboard/user-appointment'
      path: '/user-appointment'
      fullPath: '/dashboard/user-appointment'
      preLoaderRoute: typeof DashboardUserAppointmentRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/doc-prescription': {
      id: '/dashboard/doc-prescription'
      path: '/doc-prescription'
      fullPath: '/dashboard/doc-prescription'
      preLoaderRoute: typeof DashboardDocPrescriptionRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/doc-message': {
      id: '/dashboard/doc-message'
      path: '/doc-message'
      fullPath: '/dashboard/doc-message'
      preLoaderRoute: typeof DashboardDocMessageRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/doc-home': {
      id: '/dashboard/doc-home'
      path: '/doc-home'
      fullPath: '/dashboard/doc-home'
      preLoaderRoute: typeof DashboardDocHomeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/doc-calendar': {
      id: '/dashboard/doc-calendar'
      path: '/doc-calendar'
      fullPath: '/dashboard/doc-calendar'
      preLoaderRoute: typeof DashboardDocCalendarRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/doc-appointment': {
      id: '/dashboard/doc-appointment'
      path: '/doc-appointment'
      fullPath: '/dashboard/doc-appointment'
      preLoaderRoute: typeof DashboardDocAppointmentRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface DashboardRouteChildren {
  DashboardDocAppointmentRoute: typeof DashboardDocAppointmentRoute
  DashboardDocCalendarRoute: typeof DashboardDocCalendarRoute
  DashboardDocHomeRoute: typeof DashboardDocHomeRoute
  DashboardDocMessageRoute: typeof DashboardDocMessageRoute
  DashboardDocPrescriptionRoute: typeof DashboardDocPrescriptionRoute
  DashboardUserAppointmentRoute: typeof DashboardUserAppointmentRoute
  DashboardUserBillingRoute: typeof DashboardUserBillingRoute
  DashboardUserCalendarRoute: typeof DashboardUserCalendarRoute
  DashboardUserHomeRoute: typeof DashboardUserHomeRoute
  DashboardUserLabtestRoute: typeof DashboardUserLabtestRoute
  DashboardUserMessageRoute: typeof DashboardUserMessageRoute
  DashboardUserPharmacyRoute: typeof DashboardUserPharmacyRoute
  DashboardUserPrescriptionsRoute: typeof DashboardUserPrescriptionsRoute
  DashboardUserSettingRoute: typeof DashboardUserSettingRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDocAppointmentRoute: DashboardDocAppointmentRoute,
  DashboardDocCalendarRoute: DashboardDocCalendarRoute,
  DashboardDocHomeRoute: DashboardDocHomeRoute,
  DashboardDocMessageRoute: DashboardDocMessageRoute,
  DashboardDocPrescriptionRoute: DashboardDocPrescriptionRoute,
  DashboardUserAppointmentRoute: DashboardUserAppointmentRoute,
  DashboardUserBillingRoute: DashboardUserBillingRoute,
  DashboardUserCalendarRoute: DashboardUserCalendarRoute,
  DashboardUserHomeRoute: DashboardUserHomeRoute,
  DashboardUserLabtestRoute: DashboardUserLabtestRoute,
  DashboardUserMessageRoute: DashboardUserMessageRoute,
  DashboardUserPharmacyRoute: DashboardUserPharmacyRoute,
  DashboardUserPrescriptionsRoute: DashboardUserPrescriptionsRoute,
  DashboardUserSettingRoute: DashboardUserSettingRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutUsRoute: AboutUsRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  ContactUsRoute: ContactUsRoute,
  DashboardRoute: DashboardRouteWithChildren,
  OurServicesRoute: OurServicesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
